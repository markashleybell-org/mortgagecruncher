@model IndexViewModel

@{
    var cols = new { Label = 4, Input = 3, Validation = 5 };
}

<form asp-action="Calculate" asp-controller="Home" method="get" class="form-horizontal form-variables" id="form-variables">
    <div class="form-group">
        <label asp-for="LoanValue" class="col-sm-@(cols.Label) control-label"></label>
        <div class="col-sm-@(cols.Input)">
            <div class="input-group">
                <span class="input-group-addon">£</span>
                <input asp-for="LoanValue" class="form-control" />
            </div>
        </div>
        <div class="col-sm-@(cols.Validation)">
            <p class="form-control-static"><span asp-validation-for="LoanValue"></span></p>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="TermYears" class="col-sm-@(cols.Label) control-label"></label>
        <div class="col-sm-@(cols.Input)">
            <div class="input-group">
                <input asp-for="TermYears" class="form-control" />
                <span class="input-group-addon">years</span>
            </div>
        </div>
        <div class="col-sm-@(cols.Validation)">
            <p class="form-control-static"><span asp-validation-for="TermYears"></span></p>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="StartDate" class="col-sm-@(cols.Label) control-label"></label>
        <div class="col-sm-@(cols.Input)">
            <input asp-for="StartDate" class="form-control datepicker" />
        </div>
        <div class="col-sm-@(cols.Validation)">
            <p class="form-control-static"><span asp-validation-for="StartDate"></span></p>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="TermRate" class="col-sm-@(cols.Label) control-label"></label>
        <div class="col-sm-@(cols.Input)">
            <div class="input-group">
                <input asp-for="TermRate" class="form-control" />
                <span class="input-group-addon">%</span>
            </div>
        </div>
        <div class="col-sm-@(cols.Validation)">
            <p class="form-control-static"><span asp-validation-for="TermRate"></span></p>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="FixedTermYears" class="col-sm-@(cols.Label) control-label"></label>
        <div class="col-sm-@(cols.Input)">
            <select asp-for="FixedTermYears" asp-items="Model.FixedRatePeriods" class="form-control"></select>
        </div>
        <div class="col-sm-@(cols.Validation)">
            <p class="form-control-static"><span asp-validation-for="FixedTermYears"></span></p>
        </div>
    </div>
    <div class="form-group" id="fixed-term-rate-group">
        <label asp-for="FixedTermRate" class="col-sm-@(cols.Label) control-label"></label>
        <div class="col-sm-@(cols.Input)">
            <div class="input-group">
                <input asp-for="FixedTermRate" class="form-control" />
                <span class="input-group-addon">%</span>
            </div>
        </div>
        <div class="col-sm-@(cols.Validation)">
            <p class="form-control-static"><span asp-validation-for="FixedTermRate"></span></p>
        </div>
    </div>
    <script>
        document.getElementById('fixed-term-rate-group').style.display = document.getElementById('FixedTermYears').value !== '' ? 'block' : 'none';
    </script>
    <div class="form-group">
        <label asp-for="ExtraPaymentInterval" class="col-sm-@(cols.Label) control-label"></label>
        <div class="col-sm-@(cols.Input)">
            <select asp-for="ExtraPaymentInterval" asp-items="Model.OverpaymentIntervals" class="form-control"></select>
        </div>
        <div class="col-sm-@(cols.Validation)">
            <p class="form-control-static"><span asp-validation-for="ExtraPaymentInterval"></span></p>
        </div>
    </div>
    <div id="extra-payment-amount-group">
        <div class="form-group">
            <label asp-for="ExtraPaymentAmount" class="col-sm-@(cols.Label) control-label"></label>
            <div class="col-sm-@(cols.Input)">
                <div class="input-group">
                    <span class="input-group-addon">£</span>
                    <input asp-for="ExtraPaymentAmount" class="form-control" />
                </div>
            </div>
            <div class="col-sm-@(cols.Validation)">
                <p class="form-control-static"><span asp-validation-for="ExtraPaymentAmount"></span></p>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="AmortisationScheduleType" class="col-sm-@(cols.Label) control-label"></label>
            <div class="col-sm-@(cols.Input)">
                <select asp-for="AmortisationScheduleType" asp-items="Html.GetEnumSelectList(typeof(AmortisationScheduleType))" class="form-control"></select>
            </div>
            <div class="col-sm-@(cols.Validation)">
                <p class="form-control-static"><span asp-validation-for="AmortisationScheduleType"></span></p>
            </div>
        </div>
    </div>
    <script>
        document.getElementById('extra-payment-amount-group').style.display = document.getElementById('ExtraPaymentInterval').value !== '' ? 'block' : 'none';
    </script>
    <div class="form-group">
        <div class="col-sm-4 col-sm-offset-@(cols.Label)">
            <input type="submit" class="btn btn-primary" value="Calculate Payments" />
        </div>
    </div>
    <input type="hidden" asp-for="Valid" />
    <input type="hidden" id="refresh" value="no" />
</form>
@if(Model.Valid) {
<script>
    document.getElementById('form-variables').style.display = 'none';
</script>
<p id="mortgage-summary">
    <strong>@Model.LoanValue.ToString("C")</strong> repayable over <strong>@Model.TermYears</strong> years at
    @if (Model.FixedTermYears.HasValue)
    {
        <strong>@Model.FixedTermRate% APR fixed for @Model.FixedTermYears</strong> @:years, then reverting to 
    }
    <strong>@Model.TermRate% SVR</strong>. 
    @if(Model.ExtraPaymentInterval.HasValue && Model.ExtraPaymentAmount.HasValue && Model.ExtraPaymentInterval > 0 && Model.ExtraPaymentAmount > 0) { 
    @:<br />An overpayment of <strong>@Model.ExtraPaymentAmount.Value.ToString("C")</strong> will be made <strong>every @Model.ExtraPaymentInterval months.</strong>
    }
    <a href="#" id="show-form">[Change]</a>
</p>

}

@if(Model.ScheduleEntries.Count() > 0) {
<table class="table table-striped table-hover table-condensed">
    <thead>
        <tr>
            <th>Year</th>
            <th>Date</th>
            <th>Pmt. No.</th>
            <th>Interest</th>
            <th class="text-right">% APR</th>
            <th class="text-right">Payment</th>
            <th class="text-right">Interest</th>
            <th class="text-right">Principal</th>
            <th class="text-right">Balance</th>
        </tr>
    </thead>
    <tbody>
        @{
            var now = DateTime.Now;
            var currentYear = 0;
        }
        @foreach (var entry in Model.ScheduleEntries)
        {
            <tr class="@(entry.InterestType == InterestType.Fixed ? "fixed" : "variable")@((entry.PaymentDate.Year == now.Year && entry.PaymentDate.Month == now.Month) ? " current" : "")">
                @if(currentYear != entry.PaymentDate.Year)
                {
                <td class="year" rowspan="@(13 - entry.PaymentDate.Month)">@entry.PaymentDate.Year</td>
                    currentYear = entry.PaymentDate.Year;
                }
                <td>@entry.PaymentDate.ToString("dd MMM")</td>
                <td>@entry.PaymentNumber</td>
                <td>@entry.InterestType</td>
                <td class="text-right">@entry.InterestRate</td>
                <td class="text-right">@entry.Payment.ToString("F2")</td>
                <td class="text-right">@entry.Interest.ToString("F2")</td>
                <td class="text-right">@entry.Principal.ToString("F2")</td>
                <td class="text-right">@entry.Balance.ToString("F2")</td>
            </tr>
        }
    </tbody>
</table>
}